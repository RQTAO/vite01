{
  "version": 3,
  "sources": ["../../mockjs/src/mock/random/date.js"],
  "sourcesContent": ["/*\n    ## Date\n*/\nvar patternLetters = {\n    yyyy: 'getFullYear',\n    yy: function(date) {\n        return ('' + date.getFullYear()).slice(2)\n    },\n    y: 'yy',\n\n    MM: function(date) {\n        var m = date.getMonth() + 1\n        return m < 10 ? '0' + m : m\n    },\n    M: function(date) {\n        return date.getMonth() + 1\n    },\n\n    dd: function(date) {\n        var d = date.getDate()\n        return d < 10 ? '0' + d : d\n    },\n    d: 'getDate',\n\n    HH: function(date) {\n        var h = date.getHours()\n        return h < 10 ? '0' + h : h\n    },\n    H: 'getHours',\n    hh: function(date) {\n        var h = date.getHours() % 12\n        return h < 10 ? '0' + h : h\n    },\n    h: function(date) {\n        return date.getHours() % 12\n    },\n\n    mm: function(date) {\n        var m = date.getMinutes()\n        return m < 10 ? '0' + m : m\n    },\n    m: 'getMinutes',\n\n    ss: function(date) {\n        var s = date.getSeconds()\n        return s < 10 ? '0' + s : s\n    },\n    s: 'getSeconds',\n\n    SS: function(date) {\n        var ms = date.getMilliseconds()\n        return ms < 10 && '00' + ms || ms < 100 && '0' + ms || ms\n    },\n    S: 'getMilliseconds',\n\n    A: function(date) {\n        return date.getHours() < 12 ? 'AM' : 'PM'\n    },\n    a: function(date) {\n        return date.getHours() < 12 ? 'am' : 'pm'\n    },\n    T: 'getTime'\n}\nmodule.exports = {\n    // 日期占位符集合。\n    _patternLetters: patternLetters,\n    // 日期占位符正则。\n    _rformat: new RegExp((function() {\n        var re = []\n        for (var i in patternLetters) re.push(i)\n        return '(' + re.join('|') + ')'\n    })(), 'g'),\n    // 格式化日期。\n    _formatDate: function(date, format) {\n        return format.replace(this._rformat, function creatNewSubString($0, flag) {\n            return typeof patternLetters[flag] === 'function' ? patternLetters[flag](date) :\n                patternLetters[flag] in patternLetters ? creatNewSubString($0, patternLetters[flag]) :\n                date[patternLetters[flag]]()\n        })\n    },\n    // 生成一个随机的 Date 对象。\n    _randomDate: function(min, max) { // min, max\n        min = min === undefined ? new Date(0) : min\n        max = max === undefined ? new Date() : max\n        return new Date(Math.random() * (max.getTime() - min.getTime()))\n    },\n    // 返回一个随机的日期字符串。\n    date: function(format) {\n        format = format || 'yyyy-MM-dd'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回一个随机的时间字符串。\n    time: function(format) {\n        format = format || 'HH:mm:ss'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回一个随机的日期和时间字符串。\n    datetime: function(format) {\n        format = format || 'yyyy-MM-dd HH:mm:ss'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回当前的日期和时间字符串。\n    now: function(unit, format) {\n        // now(unit) now(format)\n        if (arguments.length === 1) {\n            // now(format)\n            if (!/year|month|day|hour|minute|second|week/.test(unit)) {\n                format = unit\n                unit = ''\n            }\n        }\n        unit = (unit || '').toLowerCase()\n        format = format || 'yyyy-MM-dd HH:mm:ss'\n\n        var date = new Date()\n\n        /* jshint -W086 */\n        // 参考自 http://momentjs.cn/docs/#/manipulating/start-of/\n        switch (unit) {\n            case 'year':\n                date.setMonth(0)\n            case 'month':\n                date.setDate(1)\n            case 'week':\n            case 'day':\n                date.setHours(0)\n            case 'hour':\n                date.setMinutes(0)\n            case 'minute':\n                date.setSeconds(0)\n            case 'second':\n                date.setMilliseconds(0)\n        }\n        switch (unit) {\n            case 'week':\n                date.setDate(date.getDate() - date.getDay())\n        }\n\n        return this._formatDate(date, format)\n    }\n}"],
  "mappings": "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",
  "names": []
}
